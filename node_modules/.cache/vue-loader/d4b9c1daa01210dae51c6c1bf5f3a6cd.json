{"remainingRequest":"/home/jean/workbench/projeto-consolidado/cronoanalise-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jean/workbench/projeto-consolidado/cronoanalise-client/src/views/produto/show/Produto.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jean/workbench/projeto-consolidado/cronoanalise-client/src/views/produto/show/Produto.vue","mtime":1575586686582},{"path":"/home/jean/workbench/projeto-consolidado/cronoanalise-client/node_modules/vuetify-loader/lib/loader.js","mtime":1575586686446},{"path":"/home/jean/workbench/projeto-consolidado/cronoanalise-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jean/workbench/projeto-consolidado/cronoanalise-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Router from '../../../router';\nimport Produto from \"../produto.service\";\nimport Validacoes from \"../../../components/Validacoes\";\nimport ZoomEmpresas from \"../../../components/Zoom/ZoomEmpresas/ZoomEmpresas\";\nimport {mdiPlusBoxOutline, mdiDelete, mdiPencil} from '@mdi/js';\n\nexport default {\n    name: \"Produto\",\n    Router,\n    data: () => ({\n        dialogOperacao: false,\n        dense: false,\n        fixedHeader: false,\n        height: 260,\n        editar: false,\n        icons: {\n            mdiPlusBoxOutline,\n            mdiDelete,\n            mdiPencil\n        },\n        operacoes: [],\n        operacao: {\n            oid: null,\n            quantidadeOperadores: '',\n            nome: '',\n            descricao: '',\n            observacoes: [],\n            index: 0,\n        },\n        empresaOid: '',\n        msgDeAlertas: {\n            success: '',\n            error: '',\n            info: '',\n            warning: '',\n        },\n        produto: {\n            nome: '',\n            codigo: '',\n            oid: '',\n            operacoes: [],\n        },\n        validacoes: [],\n        valid: true,\n    }),\n    computed: {\n        formTitle() {\n            return this.$route.params.oid === 'new' ? 'Novo Produto' : 'Editar Produto';\n        },\n    },\n    created() {\n        if (this.$route.params.oid && this.$route.params.oid !== 'new') {\n            this.buscaProduto()\n        } else {\n            this.produto.empresa = {oid: ''};\n        }\n    },\n    methods: {\n        adicionarOperação() {\n            this.checkFormModalOperacao();\n            if (!this.editar) {\n                this.operacao.observacoes = [];\n                this.operacoes.push(this.operacao);\n                this.operacao = {};\n                this.dialogOperacao = false;\n            } else {\n                this.operacaoEditada();\n            }\n        },\n        operacaoEditada() {\n            this.operacoes[this.operacao.index].oid = this.operacao.oid;\n            this.operacoes[this.operacao.index].quantidadeOperadores = this.operacao.quantidadeOperadores;\n            this.operacoes[this.operacao.index].nome = this.operacao.nome;\n            this.operacoes[this.operacao.index].descricao = this.operacao.descricao;\n            this.operacao = {};\n            this.editar = false;\n            this.dialogOperacao = false;\n        },\n        editarOperacao(index, oid) {\n            this.operacao = this.operacoes[index];\n            this.operacao.index = index;\n            this.editar = true;\n            this.dialogOperacao = true;\n        },\n        removerOperacao(index, oid) {\n            this.$swal.mixin({\n                customClass: {\n                    confirmButton: 'btn btn-success',\n                    cancelButton: 'btn btn-danger'\n                },\n                buttonsStyling: false\n            });\n            this.$swal.fire({\n                position: 'top',\n                title: 'Deseja remover essa operação?',\n                type: 'question',\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonText: 'Sim, remover!',\n                cancelButtonText: 'Não, cancelar!',\n                confirmButtonColor: 'hsl(119, 37%, 50%)',\n                cancelButtonColor: '#d33',\n                reverseButtons: true\n            }).then(resposta => {\n                if (resposta.value) {\n                    if (index > -1) {\n                        this.operacoes.splice(index, 1);\n                    }\n                } else {\n                    this.onCancelado();\n                }\n            });\n        },\n        closeDialogOperacao() {\n            this.validacoes = [];\n            this.dialogOperacao = false;\n        },\n        checkFormModalOperacao: function (e) {\n            this.validacoes = [];\n\n            if (!this.operacao.quantidadeOperadores) {\n                this.validacoes.push('A quantidade de operadores é obrigatório.');\n            } else if (!this.operacao.quantidadeOperadores > 0) {\n                this.validacoes.push('Digite uma quantidade minima de 1 operador.');\n            }\n            if (!this.operacao.nome) {\n                this.validacoes.push('Operação é obrigatório.');\n            }\n            if (!this.validacoes.length) {\n                return true;\n            }\n            e.preventDefault();\n        },\n        buscaProduto() {\n            Produto.buscaProduto(this.$route.params.oid).then(resposta => {\n                this.produto = resposta.data;\n                this.operacoes = this.produto.operacoes;\n            }).catch(onError => {\n                if (onError.response && onError.response.data) {\n                    this.msgDeAlertas.error = onError.response.data.message;\n                } else {\n                    this.msgDeAlertas.error = onError;\n                }\n            });\n        },\n        adicionarEmpresaSelecionada(valor) {\n            if (valor != null && valor.oid != null) {\n                this.produto.empresa = {};\n                this.produto.empresa.oid = valor.oid;\n            }\n        },\n        save() {\n            this.checkForm();\n            this.produto.operacoes = this.operacoes;\n            if (this.produto.oid) {\n                Produto.post(this.produto).then(resposta => {\n                    this.onSuccess(resposta.data);\n                    this.close();\n                }).catch(onError => {\n                    if (onError.response && onError.response.data) {\n                        this.onError(onError.response.data.message);\n                    } else {\n                        this.onError(onError);\n                    }\n                });\n            } else {\n                Produto.post(this.produto).then(resposta => {\n                    this.onSuccess(resposta.data);\n                    this.close();\n                }).catch(onError => {\n                    if (onError.response && onError.response.data) {\n                        this.onError(onError.response.data.message);\n                    } else {\n                        this.onError(onError);\n                    }\n                });\n            }\n        },\n        checkForm: function (e) {\n            this.validacoes = [];\n\n            if (!this.produto.nome) {\n                this.validacoes.push('O nome é obrigatório.');\n            }\n            if (!this.produto.codigo) {\n                this.validacoes.push('O código é obrigatório.');\n            }\n\n            if (this.produto.empresa && !this.produto.empresa.oid) {\n                this.validacoes.push('A empresa é obrigatória.');\n            }\n\n            if (!this.operacoes || this.operacoes.length <= 0) {\n                this.validacoes.push('Adicione pelo menos uma operação.');\n            }\n\n            if (!this.validacoes.length) {\n                return true;\n            }\n\n            e.preventDefault();\n        },\n\n        close() {\n            this.validacoes = [];\n            this.$router.push('/produtos');\n        },\n        onSuccess(msg) {\n            this.$swal.fire({\n                position: 'top',\n                type: 'success',\n                title: 'Sucesso',\n                text: msg,\n                showConfirmButton: false,\n                timer: 2000\n            });\n        },\n        onError(msg) {\n            this.$swal.fire({\n                position: 'top',\n                type: 'error',\n                title: 'Erro',\n                text: msg,\n                timer: 2000,\n            })\n        },\n        onCancelado(msg) {\n            this.$swal.fire({\n                position: 'top',\n                type: 'error',\n                title: 'Cancelado',\n                text: msg,\n                timer: 2000,\n            })\n        },\n    },\n    components: {Validacoes, ZoomEmpresas},\n};\n",{"version":3,"sources":["Produto.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Produto.vue","sourceRoot":"src/views/produto/show","sourcesContent":["<template>\n    <v-card>\n        <v-card-title>\n            <span>{{ formTitle }}</span>\n        </v-card-title>\n        <v-card-text>\n            <v-container>\n                <v-row>\n                    <v-col cols=\"12\" sm=\"5\" md=\"5\">\n                        <v-text-field v-model=\"produto.nome\"\n                                      label=\"Nome\" required></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"2\" md=\"2\">\n                        <v-text-field v-model=\"produto.codigo\"\n                                      label=\"Código\" required></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"5\" md=\"5\">\n                        <zoomEmpresas :oidEmpresa=\"produto.empresa.oid\"\n                                      v-on:empresaSelecionada=\"adicionarEmpresaSelecionada\"></zoomEmpresas>\n                    </v-col>\n                </v-row>\n                <br/>\n                <v-row justify=\"center\">\n                    <v-dialog v-model=\"dialogOperacao\" persistent max-width=\"900\">\n                        <template v-slot:activator=\"{ on }\">\n                            <v-btn color=\"primary\" @click=\"\" dark v-on=\"on\">\n                                Adicionar Operação\n                            </v-btn>\n                        </template>\n                        <v-card>\n                            <v-card-title>\n                                <span v-if=\"!editar\">Cadastro de Operação</span>\n                                <span v-if=\"editar\">Editar Operação</span>\n                            </v-card-title>\n                            <v-divider></v-divider>\n                            <br/>\n                            <v-card-text>\n                                <v-row>\n                                    <v-col cols=\"12\" sm=\"3\" md=\"3\">\n                                        <v-text-field v-model=\"operacao.quantidadeOperadores\"\n                                                      v-mask=\"['#', '##']\"\n                                                      label=\"Operadores\"></v-text-field>\n                                    </v-col>\n                                    <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                                        <v-text-field v-model=\"operacao.nome\"\n                                                      label=\"Operação\"></v-text-field>\n                                    </v-col>\n                                </v-row>\n                                <v-row>\n                                    <v-col cols=\"12\" sm=\"12\" md=\"12\">\n                                        <v-textarea\n                                                v-model=\"operacao.descricao\"\n                                                class=\"mx-3\"\n                                                label=\"Descrição da Operação\"\n                                                rows=\"2\"\n                                        ></v-textarea>\n                                    </v-col>\n                                </v-row>\n                                <br/>\n                                <validacoes :success=\"false\" :info=\"false\" :warning=\"validacoes\"\n                                            :error=\"false\"></validacoes>\n                            </v-card-text>\n                            <v-card-actions>\n                                <div class=\"flex-grow-1\"></div>\n                                <v-btn color=\"grey darken-1\" @click=\"closeDialogOperacao()\">Voltar</v-btn>\n                                <v-btn color=\"green darken-1\" @click=\"adicionarOperação()\">Adicionar\n                                </v-btn>\n                            </v-card-actions>\n                        </v-card>\n                    </v-dialog>\n                </v-row>\n                <br/>\n                <v-simple-table :dense=\"dense\" :fixed-header=\"fixedHeader\" :height=\"height\">\n                    <thead>\n                    <tr>\n                        <th style=\"width:120px;\" class=\"text-center\">Operadores</th>\n                        <th style=\"width:200px;\" class=\"text-left\">Operação</th>\n                        <th style=\"width:500px;\" class=\"text-left\">Descrição</th>\n                        <th style=\"width:80px;\" class=\"text-center\">Editar</th>\n                        <th style=\"width:80px;\" class=\"text-center\">Remover</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr v-for=\"(item ,index) in operacoes\" :key=\"item.oid\">\n                        <td class=\"text-center\">{{item.quantidadeOperadores}}</td>\n                        <td class=\"text-left\">{{item.nome}}</td>\n                        <td class=\"text-left\">{{ item.descricao }}</td>\n                        <td class=\"text-center\">\n                            <v-icon small color=\"blue\" @click=\"editarOperacao(index,item.oid)\">\n                                {{icons.mdiPencil}}\n                            </v-icon>\n                        </td>\n                        <td class=\"text-center\">\n                            <v-icon small color=\"red\" @click=\"removerOperacao(index,item.oid)\">\n                                {{icons.mdiDelete}}\n                            </v-icon>\n                        </td>\n                    </tr>\n                    </tbody>\n                </v-simple-table>\n                <br/>\n                <validacoes :success=\"false\" :info=\"false\" :warning=\"validacoes\"\n                            :error=\"false\"></validacoes>\n            </v-container>\n        </v-card-text>\n        <v-card-actions>\n            <div class=\"flex-grow-1\"></div>\n            <v-btn color=\"grey darken-1\" @click=\"close\">Voltar</v-btn>\n            <v-btn color=\"green darken-1\" @click=\"save\">Salvar</v-btn>\n        </v-card-actions>\n    </v-card>\n</template>\n\n<script>\n    import Router from '../../../router';\n    import Produto from \"../produto.service\";\n    import Validacoes from \"../../../components/Validacoes\";\n    import ZoomEmpresas from \"../../../components/Zoom/ZoomEmpresas/ZoomEmpresas\";\n    import {mdiPlusBoxOutline, mdiDelete, mdiPencil} from '@mdi/js';\n\n    export default {\n        name: \"Produto\",\n        Router,\n        data: () => ({\n            dialogOperacao: false,\n            dense: false,\n            fixedHeader: false,\n            height: 260,\n            editar: false,\n            icons: {\n                mdiPlusBoxOutline,\n                mdiDelete,\n                mdiPencil\n            },\n            operacoes: [],\n            operacao: {\n                oid: null,\n                quantidadeOperadores: '',\n                nome: '',\n                descricao: '',\n                observacoes: [],\n                index: 0,\n            },\n            empresaOid: '',\n            msgDeAlertas: {\n                success: '',\n                error: '',\n                info: '',\n                warning: '',\n            },\n            produto: {\n                nome: '',\n                codigo: '',\n                oid: '',\n                operacoes: [],\n            },\n            validacoes: [],\n            valid: true,\n        }),\n        computed: {\n            formTitle() {\n                return this.$route.params.oid === 'new' ? 'Novo Produto' : 'Editar Produto';\n            },\n        },\n        created() {\n            if (this.$route.params.oid && this.$route.params.oid !== 'new') {\n                this.buscaProduto()\n            } else {\n                this.produto.empresa = {oid: ''};\n            }\n        },\n        methods: {\n            adicionarOperação() {\n                this.checkFormModalOperacao();\n                if (!this.editar) {\n                    this.operacao.observacoes = [];\n                    this.operacoes.push(this.operacao);\n                    this.operacao = {};\n                    this.dialogOperacao = false;\n                } else {\n                    this.operacaoEditada();\n                }\n            },\n            operacaoEditada() {\n                this.operacoes[this.operacao.index].oid = this.operacao.oid;\n                this.operacoes[this.operacao.index].quantidadeOperadores = this.operacao.quantidadeOperadores;\n                this.operacoes[this.operacao.index].nome = this.operacao.nome;\n                this.operacoes[this.operacao.index].descricao = this.operacao.descricao;\n                this.operacao = {};\n                this.editar = false;\n                this.dialogOperacao = false;\n            },\n            editarOperacao(index, oid) {\n                this.operacao = this.operacoes[index];\n                this.operacao.index = index;\n                this.editar = true;\n                this.dialogOperacao = true;\n            },\n            removerOperacao(index, oid) {\n                this.$swal.mixin({\n                    customClass: {\n                        confirmButton: 'btn btn-success',\n                        cancelButton: 'btn btn-danger'\n                    },\n                    buttonsStyling: false\n                });\n                this.$swal.fire({\n                    position: 'top',\n                    title: 'Deseja remover essa operação?',\n                    type: 'question',\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonText: 'Sim, remover!',\n                    cancelButtonText: 'Não, cancelar!',\n                    confirmButtonColor: 'hsl(119, 37%, 50%)',\n                    cancelButtonColor: '#d33',\n                    reverseButtons: true\n                }).then(resposta => {\n                    if (resposta.value) {\n                        if (index > -1) {\n                            this.operacoes.splice(index, 1);\n                        }\n                    } else {\n                        this.onCancelado();\n                    }\n                });\n            },\n            closeDialogOperacao() {\n                this.validacoes = [];\n                this.dialogOperacao = false;\n            },\n            checkFormModalOperacao: function (e) {\n                this.validacoes = [];\n\n                if (!this.operacao.quantidadeOperadores) {\n                    this.validacoes.push('A quantidade de operadores é obrigatório.');\n                } else if (!this.operacao.quantidadeOperadores > 0) {\n                    this.validacoes.push('Digite uma quantidade minima de 1 operador.');\n                }\n                if (!this.operacao.nome) {\n                    this.validacoes.push('Operação é obrigatório.');\n                }\n                if (!this.validacoes.length) {\n                    return true;\n                }\n                e.preventDefault();\n            },\n            buscaProduto() {\n                Produto.buscaProduto(this.$route.params.oid).then(resposta => {\n                    this.produto = resposta.data;\n                    this.operacoes = this.produto.operacoes;\n                }).catch(onError => {\n                    if (onError.response && onError.response.data) {\n                        this.msgDeAlertas.error = onError.response.data.message;\n                    } else {\n                        this.msgDeAlertas.error = onError;\n                    }\n                });\n            },\n            adicionarEmpresaSelecionada(valor) {\n                if (valor != null && valor.oid != null) {\n                    this.produto.empresa = {};\n                    this.produto.empresa.oid = valor.oid;\n                }\n            },\n            save() {\n                this.checkForm();\n                this.produto.operacoes = this.operacoes;\n                if (this.produto.oid) {\n                    Produto.post(this.produto).then(resposta => {\n                        this.onSuccess(resposta.data);\n                        this.close();\n                    }).catch(onError => {\n                        if (onError.response && onError.response.data) {\n                            this.onError(onError.response.data.message);\n                        } else {\n                            this.onError(onError);\n                        }\n                    });\n                } else {\n                    Produto.post(this.produto).then(resposta => {\n                        this.onSuccess(resposta.data);\n                        this.close();\n                    }).catch(onError => {\n                        if (onError.response && onError.response.data) {\n                            this.onError(onError.response.data.message);\n                        } else {\n                            this.onError(onError);\n                        }\n                    });\n                }\n            },\n            checkForm: function (e) {\n                this.validacoes = [];\n\n                if (!this.produto.nome) {\n                    this.validacoes.push('O nome é obrigatório.');\n                }\n                if (!this.produto.codigo) {\n                    this.validacoes.push('O código é obrigatório.');\n                }\n\n                if (this.produto.empresa && !this.produto.empresa.oid) {\n                    this.validacoes.push('A empresa é obrigatória.');\n                }\n\n                if (!this.operacoes || this.operacoes.length <= 0) {\n                    this.validacoes.push('Adicione pelo menos uma operação.');\n                }\n\n                if (!this.validacoes.length) {\n                    return true;\n                }\n\n                e.preventDefault();\n            },\n\n            close() {\n                this.validacoes = [];\n                this.$router.push('/produtos');\n            },\n            onSuccess(msg) {\n                this.$swal.fire({\n                    position: 'top',\n                    type: 'success',\n                    title: 'Sucesso',\n                    text: msg,\n                    showConfirmButton: false,\n                    timer: 2000\n                });\n            },\n            onError(msg) {\n                this.$swal.fire({\n                    position: 'top',\n                    type: 'error',\n                    title: 'Erro',\n                    text: msg,\n                    timer: 2000,\n                })\n            },\n            onCancelado(msg) {\n                this.$swal.fire({\n                    position: 'top',\n                    type: 'error',\n                    title: 'Cancelado',\n                    text: msg,\n                    timer: 2000,\n                })\n            },\n        },\n        components: {Validacoes, ZoomEmpresas},\n    };\n</script>\n\n<style scoped>\n\n</style>"]}]}