{"remainingRequest":"/home/jean/workbench/projeto-consolidado/cronoanalise-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jean/workbench/projeto-consolidado/cronoanalise-client/src/views/usuario/show/Usuario.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jean/workbench/projeto-consolidado/cronoanalise-client/src/views/usuario/show/Usuario.vue","mtime":1575586686582},{"path":"/home/jean/workbench/projeto-consolidado/cronoanalise-client/node_modules/vuetify-loader/lib/loader.js","mtime":1575586686446},{"path":"/home/jean/workbench/projeto-consolidado/cronoanalise-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jean/workbench/projeto-consolidado/cronoanalise-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Router from '../../../router';\nimport Usuario from \"../usuario.service\";\nimport Validacoes from \"../../../components/Validacoes\";\nimport ZoomMaquinas from \"../../../components/Zoom/ZoomMaquinas/ZoomMaquinas\";\n\nexport default {\n    name: \"Usuario\",\n    Router,\n    data: () => ({\n        msgDeAlertas: {\n            success: '',\n            error: '',\n            info: '',\n            warning: '',\n        },\n        usuario: {\n            nome: '',\n            email: '',\n            login: '',\n            senha: '',\n            confirmarSenha: '',\n            tipoUsuario: '',\n            oid: '',\n        },\n        opcoesTipoUsuario: [\n            'Professor',\n            'Aluno'\n        ],\n        validacoes: [],\n        valid: true,\n    }),\n    computed: {\n        formTitle() {\n            return this.$route.params.oid === 'new' ? 'Novo Usuário' : 'Editar Usuário';\n        },\n    },\n    created() {\n        if (this.$route.params.oid && this.$route.params.oid !== 'new') {\n            this.buscaUsuario()\n        }\n    },\n    methods: {\n        buscaUsuario() {\n            Usuario.buscaUsuario(this.$route.params.oid).then(resposta => {\n                this.usuario = resposta.data;\n            }).catch(onError => {\n                if (onError.response && onError.response.data) {\n                    this.msgDeAlertas.error = onError.response.data.message;\n                } else {\n                    this.msgDeAlertas.error = onError;\n                }\n            });\n        },\n        adicionarMaquinaSelecionada(valor) {\n\n        },\n        save() {\n            this.checkForm();\n            if (this.usuario.oid) {\n                Usuario.post(this.usuario).then(resposta => {\n                    this.onSuccess(resposta.data);\n                    this.close();\n                }).catch(onError => {\n                    if (onError.response && onError.response.data) {\n                        this.onError(onError.response.data.message);\n                    } else {\n                        this.onError(onError);\n                    }\n                    this.close();\n                });\n            } else {\n                Usuario.post(this.usuario).then(resposta => {\n                    this.onSuccess(resposta.data);\n                    this.close();\n                }).catch(onError => {\n                    if (onError.response && onError.response.data) {\n                        this.onError(onError.response.data.message);\n                    } else {\n                        this.onError(onError);\n                    }\n                    this.close();\n                });\n            }\n        },\n        checkForm: function (e) {\n            this.validacoes = [];\n\n            if (!this.usuario.nome) {\n                this.validacoes.push('O nome é obrigatório.');\n            }\n            if (!this.usuario.email) {\n                this.validacoes.push('O e-mail é obrigatório.');\n            } else if (!this.validEmail(this.usuario.email)) {\n                this.validacoes.push('Utilize um e-mail válido.');\n            }\n            if (!this.usuario.login) {\n                this.validacoes.push('O login é obrigatório.');\n            }\n            if (!this.usuario.senha) {\n                this.validacoes.push('A senha é obrigatória.');\n            }\n            if (!this.usuario.confirmarSenha) {\n                this.validacoes.push('Confirmar senha é obrigatório.');\n            }\n            if (this.usuario.confirmarSenha !== this.usuario.senha) {\n                this.validacoes.push('As senhas não conferem.');\n            }\n            if (!this.usuario.tipoUsuario) {\n                this.validacoes.push('Selecione um tipo de Usuário.')\n            }\n\n            if (!this.validacoes.length) {\n                return true;\n            }\n\n            e.preventDefault();\n        },\n\n        validEmail: function (email) {\n            var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return re.test(email);\n        },\n        close() {\n            this.validacoes = [];\n            this.$router.push('/usuarios');\n        },\n        onSuccess(msg) {\n            this.$swal.fire({\n                position: 'top',\n                type: 'success',\n                title: 'Sucesso',\n                text: msg,\n                showConfirmButton: false,\n                timer: 2000\n            });\n        },\n        onError(msg) {\n            this.$swal.fire({\n                position: 'top',\n                type: 'error',\n                title: 'Erro',\n                text: msg,\n                timer: 2000,\n            })\n        },\n    },\n    components: {Validacoes, ZoomMaquinas},\n};\n",{"version":3,"sources":["Usuario.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Usuario.vue","sourceRoot":"src/views/usuario/show","sourcesContent":["<template>\n    <v-card>\n        <v-card-title>\n            <span>{{ formTitle }}</span>\n        </v-card-title>\n\n        <v-card-text>\n            <v-container>\n                <v-row>\n                    <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field v-model=\"usuario.nome\" label=\"Nome\" required></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field v-model=\"usuario.email\" label=\"E-mail\" required></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field v-model=\"usuario.login\" label=\"Login\" required></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field v-model=\"usuario.senha\"\n                                      type=\"password\"\n                                      maxlength=\"6\"\n                                      counter=\"6\"\n                                      label=\"Senha\" required></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-text-field v-model=\"usuario.confirmarSenha\"\n                                      type=\"password\"\n                                      maxlength=\"6\"\n                                      counter=\"6\"\n                                      label=\"Confirmar Senha\" required></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                        <v-select v-model=\"usuario.tipoUsuario\" :items=\"opcoesTipoUsuario\"\n                                  label=\"Tipo Usuário\" required></v-select>\n                    </v-col>\n                </v-row>\n                <br>\n                <validacoes :success=\"false\" :info=\"false\" :warning=\"validacoes\"\n                            :error=\"false\"></validacoes>\n            </v-container>\n        </v-card-text>\n        <v-card-actions>\n            <div class=\"flex-grow-1\"></div>\n            <v-btn color=\"grey darken-1\" @click=\"close\">Voltar</v-btn>\n            <v-btn color=\"green darken-1\" @click=\"save\">Salvar</v-btn>\n        </v-card-actions>\n    </v-card>\n</template>\n\n<script>\n    import Router from '../../../router';\n    import Usuario from \"../usuario.service\";\n    import Validacoes from \"../../../components/Validacoes\";\n    import ZoomMaquinas from \"../../../components/Zoom/ZoomMaquinas/ZoomMaquinas\";\n\n    export default {\n        name: \"Usuario\",\n        Router,\n        data: () => ({\n            msgDeAlertas: {\n                success: '',\n                error: '',\n                info: '',\n                warning: '',\n            },\n            usuario: {\n                nome: '',\n                email: '',\n                login: '',\n                senha: '',\n                confirmarSenha: '',\n                tipoUsuario: '',\n                oid: '',\n            },\n            opcoesTipoUsuario: [\n                'Professor',\n                'Aluno'\n            ],\n            validacoes: [],\n            valid: true,\n        }),\n        computed: {\n            formTitle() {\n                return this.$route.params.oid === 'new' ? 'Novo Usuário' : 'Editar Usuário';\n            },\n        },\n        created() {\n            if (this.$route.params.oid && this.$route.params.oid !== 'new') {\n                this.buscaUsuario()\n            }\n        },\n        methods: {\n            buscaUsuario() {\n                Usuario.buscaUsuario(this.$route.params.oid).then(resposta => {\n                    this.usuario = resposta.data;\n                }).catch(onError => {\n                    if (onError.response && onError.response.data) {\n                        this.msgDeAlertas.error = onError.response.data.message;\n                    } else {\n                        this.msgDeAlertas.error = onError;\n                    }\n                });\n            },\n            adicionarMaquinaSelecionada(valor) {\n\n            },\n            save() {\n                this.checkForm();\n                if (this.usuario.oid) {\n                    Usuario.post(this.usuario).then(resposta => {\n                        this.onSuccess(resposta.data);\n                        this.close();\n                    }).catch(onError => {\n                        if (onError.response && onError.response.data) {\n                            this.onError(onError.response.data.message);\n                        } else {\n                            this.onError(onError);\n                        }\n                        this.close();\n                    });\n                } else {\n                    Usuario.post(this.usuario).then(resposta => {\n                        this.onSuccess(resposta.data);\n                        this.close();\n                    }).catch(onError => {\n                        if (onError.response && onError.response.data) {\n                            this.onError(onError.response.data.message);\n                        } else {\n                            this.onError(onError);\n                        }\n                        this.close();\n                    });\n                }\n            },\n            checkForm: function (e) {\n                this.validacoes = [];\n\n                if (!this.usuario.nome) {\n                    this.validacoes.push('O nome é obrigatório.');\n                }\n                if (!this.usuario.email) {\n                    this.validacoes.push('O e-mail é obrigatório.');\n                } else if (!this.validEmail(this.usuario.email)) {\n                    this.validacoes.push('Utilize um e-mail válido.');\n                }\n                if (!this.usuario.login) {\n                    this.validacoes.push('O login é obrigatório.');\n                }\n                if (!this.usuario.senha) {\n                    this.validacoes.push('A senha é obrigatória.');\n                }\n                if (!this.usuario.confirmarSenha) {\n                    this.validacoes.push('Confirmar senha é obrigatório.');\n                }\n                if (this.usuario.confirmarSenha !== this.usuario.senha) {\n                    this.validacoes.push('As senhas não conferem.');\n                }\n                if (!this.usuario.tipoUsuario) {\n                    this.validacoes.push('Selecione um tipo de Usuário.')\n                }\n\n                if (!this.validacoes.length) {\n                    return true;\n                }\n\n                e.preventDefault();\n            },\n\n            validEmail: function (email) {\n                var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                return re.test(email);\n            },\n            close() {\n                this.validacoes = [];\n                this.$router.push('/usuarios');\n            },\n            onSuccess(msg) {\n                this.$swal.fire({\n                    position: 'top',\n                    type: 'success',\n                    title: 'Sucesso',\n                    text: msg,\n                    showConfirmButton: false,\n                    timer: 2000\n                });\n            },\n            onError(msg) {\n                this.$swal.fire({\n                    position: 'top',\n                    type: 'error',\n                    title: 'Erro',\n                    text: msg,\n                    timer: 2000,\n                })\n            },\n        },\n        components: {Validacoes, ZoomMaquinas},\n    };\n</script>\n\n<style scoped>\n\n</style>"]}]}